// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "InsideField":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . 2 . 2 . . . . . . . . 
2 2 2 2 . 2 . 2 . . . 2 . . . . 
. . . 2 . . . . . 2 2 . 2 . . . 
. 2 . . . 2 2 2 . 2 . . . 2 2 2 
. 2 2 2 2 2 . 2 2 2 . 2 2 . 2 . 
. 2 . 2 . 2 . 2 . 2 . . 2 2 2 . 
. 2 . . . . . . . . . . 2 . 2 . 
. . 2 2 2 . . . . . 2 2 2 . 2 . 
2 . 2 . . . . . . . . . . . . . 
. . 2 2 2 2 . . . 2 2 2 2 . . . 
. . . . . . . 2 . . . . . . . 2 
. 2 . . 2 . 2 2 2 2 2 2 . . . 2 
2 2 2 2 2 . . 2 . . . 2 . 2 . 2 
. . . . . 2 . 2 2 2 . . . 2 . 2 
. . . . 2 2 2 2 . 2 2 2 2 . . 2 
. . . . . . . . . . . . . . . 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile4,sprites.castle.tileDarkGrass3,sprites.builtin.forestTiles0], TileScale.Sixteen);
            case "Lava":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile4,myTiles.tile1,sprites.dungeon.hazardLava1,sprites.castle.tilePath5], TileScale.Sixteen);
            case "Savethepuppies":
            case "level3":return tiles.createTilemap(hex`0b00080002010101010101010303030201010101010101030303020101010101010103030302010101010101010303030201010101010101030303020101010101010103030302010101010101010303030201010101010101030303`, img`
. . . . . . . . 2 2 2 
. . . . . . . . 2 2 2 
. . . . . . . . 2 2 2 
. . . . . . . . 2 2 2 
. . . . . . . . 2 2 2 
. . . . . . . . 2 2 2 
. . . . . . . . 2 2 2 
. . . . . . . . 2 2 2 
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile5,sprites.castle.tilePath5], TileScale.Sixteen);
            case "Grassyside":
            case "Grassyside1":return tiles.createTilemap(hex``, img`
................................................
................................................
....................................2222........
............................22222...............
................................................
.......................22222....................
................................................
...................22222........................
................................................
................2...............................
.......2.......222..............................
......222....222222.............................
22222222222222222222222222...................222
2222222222222222222222222222................2222
222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3,sprites.castle.tileGrass1], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Dungeonforenemies":
            case "Dungeonforenemies1":return tiles.createTilemap(hex``, img`
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
`, [myTiles.transparency16,myTiles.tile2,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorLight0,sprites.dungeon.floorLight2,myTiles.tile6], TileScale.Sixteen);
            case "bushes":
            case "bushes1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 . . . 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tilePath5,myTiles.tile1,myTiles.tile2,sprites.builtin.forestTiles0], TileScale.Sixteen);
            case "RoadLevel":
            case "level4":return tiles.createTilemap(hex`100010000303030303070404040404040804040403030303030503030303030305030303030704040d05030303030303020303030305030303050303030303030503030303060404040c04040404040d050303030305030303030303030303030a040903030503030303030303030303030305030306040404040404040404040903050303050303030303030303030305030d03030a0404040409030307040d050305030303030303030503030503030a040b03030303030303050303050303030303030303030104040b03030a0409030303030303030503030303030303050303030303030306040404040404040c0404040d03030305030303030303030303030303`, img`
2 2 2 2 2 . . . . . . . . . . . 
2 2 2 2 2 . 2 2 2 2 2 2 . 2 2 2 
2 . . . 2 . 2 2 2 2 2 2 . 2 2 2 
2 . 2 2 2 . 2 2 2 2 2 2 . 2 2 2 
2 . . . . . . . . . . 2 . 2 2 2 
2 . 2 2 2 2 2 2 2 2 2 2 . . . 2 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
2 . . . . . . . . . . . . 2 . 2 
2 . 2 2 2 2 2 2 2 2 2 2 . 2 2 2 
2 . . . . . . 2 2 . . 2 . 2 . 2 
2 2 2 2 2 2 . 2 2 . 2 2 . . . 2 
2 2 2 2 2 2 . 2 2 . 2 2 2 2 2 2 
2 2 2 . . . . 2 2 . . . 2 2 2 2 
2 2 2 . 2 2 2 2 2 2 2 . 2 2 2 2 
2 2 2 . . . . . . . . . . . . 2 
2 2 2 . 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile4,sprites.castle.tilePath5,sprites.vehicle.roadHorizontal,sprites.vehicle.roadVertical,sprites.vehicle.roadIntersection2,sprites.vehicle.roadTurn1,sprites.vehicle.roadIntersection3,sprites.vehicle.roadTurn2,sprites.vehicle.roadTurn3,sprites.vehicle.roadTurn4,sprites.vehicle.roadIntersection1,sprites.castle.rock2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Target":
            case "tile2":return tile2;
            case "myTile":
            case "tile3":return tile3;
            case "Slantcolors":
            case "tile4":return tile4;
            case "BrightWeave":
            case "tile1":return tile1;
            case "Puppy":
            case "tile5":return tile5;
            case "Squares":
            case "tile6":return tile6;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
